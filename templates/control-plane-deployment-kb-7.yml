---
## Anchors

#telegraf:
#  <<: &influxdb_properties
#    influxdb:
#      database: concourse
#      url: http://influxdb.service.cf.internal:8086
#      username: ((influxdb.writer_username))
#      password: ((influxdb.writer_password))
#  jobs:
  # captures host metrics
#  - <<: &telegraf_job
#      name: telegraf
#      release: telegraf
#      properties:
#        <<: *influxdb_properties
  # captures per-process metrics
  # https://github.com/influxdata/telegraf/blob/4d3519756c278c90d1207518bcc97a10c28555f3/plugins/inputs/procstat/README.md
#  - <<: &telegraf_agent_job
#      name: telegraf-agent
#      release: telegraf-agent
#      properties:
#        <<: *influxdb_properties
#        inputs:
#          procstat:
#            pattern: 'bin/concourse|bin/baggageclaim|garden-properties|bin/runc|resource/check|gzip|erlc|beam.smp|ct_run|dockerd|telegraf|postgres'


name: control-plane
releases:
- name: "concourse"
  version: ((concourse-bosh-release))
  url: https://bosh.io/d/github.com/concourse/concourse-bosh-release?v=((concourse-bosh-release))
#- name: "garden-runc"
#  version: ((garden-runc-release))
- name: "postgres"
  version: ((postgres-release))
  url: https://bosh.io/d/github.com/cloudfoundry/postgres-release?v=((postgres-release))
- name: "credhub"
  version: ((credhub-release))
  url: https://bosh.io/d/github.com/pivotal-cf/credhub-release?v=((credhub-release))
- name: "uaa"
  version: ((uaa-release))
  url: https://bosh.io/d/github.com/cloudfoundry/uaa-release?v=((uaa-release))
#- name: "influxdb"
#  version: ((influxdb-boshrelease)) 
#  url: https://bosh.io/d/github.com/vito/influxdb-boshrelease?v=((influxdb-boshrelease)) 
- name: bosh-dns-aliases
  url: "https://bosh.io/d/github.com/cloudfoundry/bosh-dns-aliases-release?v=((bosh-dns-aliases-release))"
  version: ((bosh-dns-aliases-release))
- name: bpm
  version: ((bpm-release))
  url: https://bosh.io/d/github.com/cloudfoundry/bpm-release?v=((bpm-release))
#- name: grafana  
#  version: ((grafana-boshrelease))
#  url: https://bosh.io/d/github.com/vito/grafana-boshrelease?v=((grafana-boshrelease))
#- name: telegraf
#  version: ((telegraf-release))
#  url: git+https://github.com/vito/telegraf-boshrelease
#- name: telegraf-agent
#  version: ((telegraf-agent-release))    
#  url: git+https://github.com/vito/telegraf-agent-boshrelease
stemcells:
- alias: default-jammy
  os: ubuntu-jammy
  version: ((jammy-release))
  url: https://bosh.io/d/stemcells/bosh-azure-hyperv-ubuntu-jammy-go_agent?v=((jammy-release))  
addons:
- jobs:
  - name: bosh-dns-aliases
    properties:
      aliases:
      - domain: db.service.cf.internal
        targets:
        - deployment: control-plane
          domain: bosh
          instance_group: db
          network: ((network_name))
          query: '*'
#      - domain: influxdb.service.cf.internal
#        targets:
#        - deployment: control-plane
#          domain: bosh
#          instance_group: influxdb
#          network: ((network_name))
#          query: '*'          
    release: bosh-dns-aliases
  name: bosh-dns-aliases  
instance_groups:
- azs: ((azs))
  instances: 1
  jobs:
  - consumes:
      postgres:
        from: db
    name: credhub
    properties:
      bpm:
        enabled: true
      credhub:
        authentication:
          uaa:
            ca_certs:
            - ((control-plane-tls.certificate))
            url: ((external_url)):8443
        authorization:
          permissions:
          - actors:
            - uaa-client:credhub_admin_client
            operations:
            - read
            - write
            - delete
            - read_acl
            - write_acl
            path: /*
          - actors:
            - uaa-client:concourse_to_credhub
            operations:
            - read
            path: /concourse/*
        ca_certificate: ((control-plane-ca.certificate))
        data_storage:
          database: credhub
          password: ((credhub_db_password))
          require_tls: true
          tls_ca: ((control-plane-ca.certificate))
          type: postgres
          username: credhub
        encryption:
          keys:
          - active: true
            key_properties:
              encryption_password: ((credhub_encryption_password))
            provider_name: internal
          providers:
          - name: internal
            type: internal
        port: 8844
        tls:
          certificate: ((control-plane-tls.certificate))
          private_key: ((control-plane-tls.private_key))
    provides: {}
    release: credhub
  - consumes:
      database:
        from: db
    name: uaa
    properties:
      encryption:
        active_key_label: key-1
        encryption_keys:
        - label: key-1
          passphrase: ((uaa_encryption_key))
      login:
        saml:
          serviceProviderCertificate: ((control-plane-tls.certificate))
          serviceProviderKey: ((control-plane-tls.private_key))
          serviceProviderKeyPassword: ""
      uaa:
        admin:
          client_secret: ((uaa_admin))
        ca_certs:
        - ((control-plane-ca.certificate))
        clients:
          concourse:
            access-token-validity: 1200
            authorized-grant-types: authorization_code,refresh_token
            override: true
            redirect-uri: ((external_url))/sky/issuer/callback
            refresh-token-validity: 3600
            scope: openid,email,profile,roles
            secret: ((concourse_client_secret))
          concourse_to_credhub:
            access-token-validity: 1200
            authorities: credhub.read,credhub.write
            authorized-grant-types: client_credentials
            override: true
            refresh-token-validity: 3600
            scope: ""
            secret: ((concourse_to_credhub_secret))
          credhub_admin_client:
            access-token-validity: 1200
            authorities: credhub.read,credhub.write
            authorized-grant-types: client_credentials
            override: true
            scope: uaa.none
            secret: ((credhub_admin_client_password))
        jwt:
          policy:
            active_key_id: key-1
            keys:
              key-1:
                signingKey: ((uaa_jwt.private_key))
          revocable: true
        login:
          client_secret: ((uaa_login))
        scim:
          users:
          - groups:
            - scim.write
            - scim.read
            - bosh.admin
            name: admin
            password: ((uaa_users_admin))
        sslCertificate: ((control-plane-tls.certificate))
        sslPrivateKey: ((control-plane-tls.private_key))
        url: ((external_url)):8443
        zones:
          internal:
            hostnames: []
      uaadb:
        address: db.service.cf.internal
        databases:
        - name: uaa
          tag: uaa
        db_scheme: postgresql
        port: 5432
        roles:
        - name: uaa
          password: ((uaa_db_password))
          tag: admin
        tls: enabled_skip_all_validation
    provides: {}
    release: uaa
  - consumes: {}
    name: bpm
    provides: {}
    release: bpm
  - consumes: {}
    name: web
    release: concourse
    properties: 
      worker_gateway:
        authorized_keys: |
          ((worker_key.public_key))
          ((remote_worker_key.public_key))
        host_key: ((tsa_host_key))
        log_level: debug
      bind_port: 80
      cluster_name: ((cluster_name))
      credhub:
        client_id: concourse_to_credhub
        client_secret: ((concourse_to_credhub_secret))
        tls:
          ca_cert:
            certificate: ((control-plane-tls.certificate))
        url: ((external_url)):8844
      enable_resource_causality: true  
      enable_across_step: true  
      external_url: ((external_url))
      generic_oauth:
        auth_url: ((external_url)):8443/oauth/authorize
        ca_cert:
          certificate: ((control-plane-tls.certificate))
        client_id: concourse
        client_secret: ((concourse_client_secret))
        display_name: UAA
        token_url: ((external_url)):8443/oauth/token
        userinfo_url: ((external_url)):8443/userinfo
      log_level: debug
      main_team:
        auth:
          oauth:
            users:
            - admin
      postgresql:
        ca_cert: ((control-plane-ca.certificate))
        database: atc
        role:
          name: concourse
          password: ((postgres_password))
      tls_bind_port: 443
      tls_cert: ((web-plane-tls.certificate))
      tls_key: ((web-plane-tls.private_key))
      token_signing_key: ((token_signing_key))    
#  - <<: *telegraf_job
#  - <<: *telegraf_agent_job
#  - consumes: {}
#    name: grafana
#    release: grafana
#    properties:
#      grafana:
#        admin_password: ((grafana.password))
#        admin_username: admin
#        dashboards:
#        - name: Concourse
#          content: ((grafana_dashboard))
#        - name: Concourse Builds
#          content: ((grafana_dashboard_builds))  
#        - name: Concourse Golang
#          content: ((grafana_dashboard_golang))  
#        - name: Concourse Response Tiomes
 #         content: ((grafana_dashboard_response_times))  
#        - name: Concourse Overview
#          content: ((grafana_dashboard_overview))  
#        datasources:
#        - name: concourse
#          database_name: ((influxdb.dbname))
#          url: http://influxdb.service.cf.internal:8086
#          database_type: influxdb
#          user: ((influxdb.reader_username))
#          password: ((influxdb.reader_password))
#        - name: telegraf
#          database_name: ((influxdb.dbname))
#          url: http://influxdb.service.cf.internal:8086
#          database_type: influxdb
#          user: ((influxdb.reader_username))
#          password: ((influxdb.reader_password))
#        listen_port: 3000
#        root_url: ((external_url)):3000
#        ssl:
#          cert: ((web-plane-tls.certificate))
#          key: ((web-plane-tls.private_key))
#        auth:
#          github:
#            client_id: ((grafana.github_client_id))
#            client_secret: ((grafana.github_client_secret)) 
#            enabled: ((grafana.github_enabled)) 
  lifecycle: service
  name: web
  networks:
  - default:
    - dns
    - gateway
    name: ((network_name))
  stemcell: default-jammy
  update:
    max_in_flight: 1
  vm_type: ((web_vm_type))
- azs: ((azs)) # db instance
  instances: 1
  jobs:
  - consumes: {}
    name: postgres
    properties:
      databases:
        databases:
        - name: atc
        - name: credhub
        - name: uaa
        port: 5432
        roles:
        - name: concourse
          password: ((postgres_password))
          permissions:
          - SUPERUSER
        - name: credhub
          password: ((credhub_db_password))
        - name: uaa
          password: ((uaa_db_password))
        tls:
          ca: ((control-plane-ca.certificate))
          certificate: ((control-plane-tls.certificate))
          private_key: ((control-plane-tls.private_key))
    provides:
      postgres:
        as: db
    release: postgres
  lifecycle: service
  name: db
  networks:
  - default:
    - dns
    - gateway
    name: ((network_name))
  persistent_disk_type: ((persistent_disk_type))
  stemcell: default-jammy
  update:
    max_in_flight: 1
  vm_type: ((vm_type))
- name: worker-linux
  instances: 2
  azs: ((azs))
  jobs:
  - name: worker
    properties:
      drain_timeout: 10m
      worker_gateway:
        worker_key: ((worker_key))
      containderd:
        allow_host_access: true
        listen_address: 0.0.0.0:7777
        listen_network: tcp
    release: concourse    
#  - <<: *telegraf_job
#  - <<: *telegraf_agent_job      
  lifecycle: service
  networks:
  - default:
    - dns
    - gateway
    name: ((network_name))
  stemcell: default-jammy
  update:
    max_in_flight: 1
  vm_type: ((worker_vm_type))

  
#- name: influxdb
#  azs: ((azs))
#  instances: 1
##  jobs:
#  - release: influxdb
#    name: influxdb
#    properties:
#      influxdb:
#        database: ((influxdb.dbname))
#        users:
#        - name: ((influxdb.reader_username))
#          password: ((influxdb.reader_password))
#          privilege: read
#          database: ((influxdb.dbname))
#        - name: ((influxdb.writer_username))
#          password: ((influxdb.writer_password))
#          privilege: write
#          database: ((influxdb.dbname))
#        - name: ((influxdb.administrator_username))
#          password: ((influxdb.administrator_password))
#          privilege: admin
#        retention_policy_rules:
#          example:
#            default: autogen
#            retention_policies:
#            - name: autogen
#              duration: 14d 
#  stemcell: default
#  update:
#    max_in_flight: 1
#  vm_type: ((vm_type))
#  networks:
 # - default:
 #   - dns
 #   - gateway
 #   name: ((network_name))


update:
  canaries: 1
  canary_watch_time: 30000-600000
  max_in_flight: 1
  serial: false
  update_watch_time: 30000-600000
variables:
- name: concourse_client_secret
  type: password
- name: credhub_admin_client_password
  type: password
- name: concourse_to_credhub_secret
  type: password
- name: credhub_db_password
  type: password
- name: credhub_encryption_password
  options:
    length: 40
  type: password
- name: postgres_password
  type: password
- name: token_signing_key
  type: rsa
- name: tsa_host_key
  type: ssh
- name: uaa_admin
  type: password
- name: uaa_db_password
  type: password
- name: uaa_encryption_key
  type: password
- name: uaa_jwt
  options:
    key_length: 4096
  type: rsa
- name: uaa_login
  type: password
- name: uaa_users_admin
  type: password
- name: worker_key
  type: ssh
- name: control-plane-ca
  options:
    common_name: controlplaneca
    is_ca: true
  type: certificate
#- name: control-plane-tls
#  options:
#    alternative_names:
#    - ((wildcard_domain))
#    ca: control-plane-ca
#    common_name: control-plane-tls
#  type: certificate
- name: db-tls
  options:
    ca: control-plane-ca
    common_name: db.service.cf.internal
  type: certificate
